name: eShop Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore ./eShopOnWeb.sln
    - name: Build
      run: dotnet build ./eShopOnWeb.sln --configuration Release
    - name: Test
      run: dotnet test ./eShopOnWeb.sln --configuration Release
      
  buildPushAppImage:
    name: Build and Push to ACR
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
           username: ${{ secrets.ACR_USER}}
           password: ${{ secrets.ACR_PASSWORD}}
           login-server: ${{ secrets.ACR_SERVER}}
      - run: |
         docker build -f src/Web/Dockerfile . -t ${{ secrets.ACR_SERVER}}/eshop:${{ github.run_id }}
         docker push ${{ secrets.ACR_SERVER}}/eshop:${{ github.run_id }}
  
  deployStaging:
    runs-on: ubuntu-latest
    needs: buildPushAppImage
    environment: staging
    steps:
      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS}}
          # Set this value to true to enable Azure PowerShell Login in addition to Az CLI login
          # enable-AzPSSession: # optional
          # Name of the environment. Supported values are azurecloud, azurestack, azureusgovernment, azurechinacloud, azuregermancloud. Default being azurecloud
          # environment: # optional, default is azurecloud
          # Set this value to true to enable support for accessing tenants without subscriptions
          # allow-no-subscriptions: # optional
          
      - name: Azure WebApp
        uses: Azure/webapps-deploy@v2
        with:
          # Name of the Azure Web App
          app-name: GitHubWorkshop59861126
          # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
          # publish-profile: # optional
          # Enter an existing Slot other than the Production slot
          slot-name: staging # optional, default is production
          # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
          # package: # optional, default is .
          # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
          images: ${{ secrets.ACR_SERVER}}/eshop:${{ github.run_id }}
          # Applies to Web App Containers only: Path of the Docker-Compose file. Should be a fully qualified path or relative to the default working directory. Required for multi-container scenario
          # configuration-file: # optional
          # Enter the start up command. For ex. dotnet run or dotnet run
          # startup-command: # optional
          
  deployProduction:
    runs-on: ubuntu-latest
    needs: deployStaging
    environment: production
    steps:
      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS}}
          # Set this value to true to enable Azure PowerShell Login in addition to Az CLI login
          # enable-AzPSSession: # optional
          # Name of the environment. Supported values are azurecloud, azurestack, azureusgovernment, azurechinacloud, azuregermancloud. Default being azurecloud
          # environment: # optional, default is azurecloud
          # Set this value to true to enable support for accessing tenants without subscriptions
          # allow-no-subscriptions: # optional
      - name: Swap staging to production
        run: |
         az webapp deployment slot swap --name GitHubWorkshop59861126 --resource-group githubworkshop59861126 --slot staging --target-slot production

   
